From d19dcd0d478714ebfc541f68081566de967e0b7f Mon Sep 17 00:00:00 2001
From: Filip Pytloun <filip@pytloun.cz>
Date: Thu, 11 Aug 2016 14:19:03 +0200
Subject: Don't use subtest

---
 tests/cli/test_sync.py | 105 -------------------------------------------------
 1 file changed, 105 deletions(-)

diff --git a/tests/cli/test_sync.py b/tests/cli/test_sync.py
index a93951d..6251ea8 100644
--- a/tests/cli/test_sync.py
+++ b/tests/cli/test_sync.py
@@ -272,111 +272,6 @@ def test_multiple_pairs(tmpdir, runner):
     assert not result.exception
 
 
-@given(collections=st.sets(
-    st.text(
-        st.characters(
-            blacklist_characters=set(
-                u'./\x00'  # Invalid chars on POSIX filesystems
-                + (u';' if PY2 else u'')  # https://bugs.python.org/issue16374
-            ),
-            # Surrogates can't be encoded to utf-8 in Python
-            blacklist_categories=set(['Cs'])
-        ),
-        min_size=1,
-        max_size=50
-    ),
-    min_size=1
-))
-@example(collections=[u'persönlich'])
-def test_create_collections(subtest, collections):
-    collections = set(to_native(x, 'utf-8') for x in collections)
-
-    @subtest
-    def test_inner(tmpdir, runner):
-        runner.write_with_general(dedent('''
-        [pair foobar]
-        a = foo
-        b = bar
-        collections = {colls}
-
-        [storage foo]
-        type = filesystem
-        path = {base}/foo/
-        fileext = .txt
-
-        [storage bar]
-        type = filesystem
-        path = {base}/bar/
-        fileext = .txt
-        '''.format(base=str(tmpdir), colls=json.dumps(list(collections)))))
-
-        result = runner.invoke(
-            ['discover'],
-            input='y\n' * 2 * (len(collections) + 1)
-        )
-        assert not result.exception
-
-        # Macs normally operate on the HFS+ file system which normalizes paths.
-        # That is, if you save a file with accented é in it (u'\xe9') for
-        # example, and then do a os.listdir you will see that the filename got
-        # converted to u'e\u0301'. This is normal unicode NFD normalization
-        # that the Python unicodedata module can handle.
-        #
-        # Quoted from
-        # https://stackoverflow.com/questions/18137554/how-to-convert-path-to-mac-os-x-path-the-almost-nfd-normal-form  # noqa
-        u = lambda xs: set(
-            unicodedata.normalize('NFKD', to_unicode(x, 'utf-8'))
-            for x in xs
-        )
-        assert u(x.basename for x in tmpdir.join('foo').listdir()) == \
-            u(x.basename for x in tmpdir.join('bar').listdir()) == \
-            u(collections)
-
-        result = runner.invoke(
-            ['sync'] + ['foobar/' + x for x in collections]
-        )
-        assert not result.exception
-
-
-def test_ident_conflict(tmpdir, runner):
-    runner.write_with_general(dedent('''
-    [pair foobar]
-    a = foo
-    b = bar
-    collections = null
-
-    [storage foo]
-    type = filesystem
-    path = {base}/foo/
-    fileext = .txt
-
-    [storage bar]
-    type = filesystem
-    path = {base}/bar/
-    fileext = .txt
-    '''.format(base=str(tmpdir))))
-
-    foo = tmpdir.mkdir('foo')
-    tmpdir.mkdir('bar')
-
-    foo.join('one.txt').write('UID:1')
-    foo.join('two.txt').write('UID:1')
-    foo.join('three.txt').write('UID:1')
-
-    result = runner.invoke(['discover'])
-    assert not result.exception
-
-    result = runner.invoke(['sync'])
-    assert result.exception
-    assert ('error: foobar: Storage "foo" contains multiple items with the '
-            'same UID or even content') in result.output
-    assert sorted([
-        'one.txt' in result.output,
-        'two.txt' in result.output,
-        'three.txt' in result.output,
-    ]) == [False, True, True]
-
-
 @pytest.mark.parametrize('existing,missing', [
     ('foo', 'bar'),
     ('bar', 'foo'),
